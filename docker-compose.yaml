name: backtesting
services:
  api:
    container_name: api
    image: armanmojaver/backtesting-api
    restart: unless-stopped
    tty: true
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./:/app
    depends_on:
      - go-http
      - rust-http
      - db-development
      - db-production
      - db-testing

  go-http:
    container_name: go-http
    image: armanmojaver/go-http
    restart: unless-stopped
    volumes:
      - ./go_http/logs:/app/logs
    ports:
      - "80:80"

  rust-http:
    container_name: rust-http
    image: armanmojaver/rust-http
    restart: unless-stopped
    volumes:
      - ./rust_http:/app
      - cargo-registry:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - target:/app/target
    working_dir: /app
    command: cargo watch -x run
    ports:
      - "81:81"

  db-development:
    container_name: db-development
    image: postgres:16.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db-development
      - PGPORT=54320
    volumes:
      - ./compose/db_development/db_development_data:/var/lib/postgresql/data
    ports:
      - "54320:54320"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  db-production:
    container_name: db-production
    image: postgres:16.1
    restart: unless-stopped
    environment:
      - POSTGRES_DB=db-production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./compose/db_production/db_production_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  db-testing:
    container_name: db-testing
    image: postgres:16.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db-testing
      - PGPORT=54321
    volumes:
      - ./compose/db_testing/db_testing_data:/var/lib/postgresql/data
    ports:
      - "54321:54321"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.13.0
    restart: unless-stopped
    user: root
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@example.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - ./compose/pgadmin/servers.json:/pgadmin4/servers.json
      - ./compose/pgadmin/.pgpass:/.pgpass
      - ./compose/pgadmin/pgadmin_data:/var/lib/pgadmin
    ports:
      - "8082:80"
    depends_on:
      - db-development
      - db-production
      - db-testing

  redis:
    container_name: redis
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - ./compose/redis/redis_data:/data
    ports:
      - "6379:6379"

  worker:
    container_name: worker
    image: armanmojaver/backtesting-api
    restart: unless-stopped
    command: [
      "celery",
      "-A",
      "tasks",
      "worker",
      "--loglevel=info",
      "--hostname=worker",
    ]
    volumes:
      - ./:/app
    environment:
      - CELERY_BROKER=redis://redis:6379/0
    depends_on:
      - redis

  flower:
    container_name: flower
    image: mher/flower:2.0
    restart: unless-stopped
    command: [
      "celery",
      "flower",
      "--basic_auth=admin:admin",
      "--natural_time=True",
      "--persistent=True",
    ]
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./compose/flower/flower_data:/data
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - worker

volumes:
    cargo-registry:
    cargo-git:
    target:
    pgadmin_data:
    redis_data:
    flower_data:
